// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Tenant {
  id        String    @id @default(uuid())
  name      String
  users     User[]
  channels  Channel[]
  products  Product[] // <-- Product tarafının karşılığı (zorunlu)
  createdAt DateTime  @default(now())
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  createdAt DateTime @default(now())
}

model Channel {
  id        String   @id @default(uuid())
  name      String
  type      String // ör: "trendyol"
  apiKey    String
  apiSecret String? // Trendyol için
  sellerId  String? // Trendyol supplierId/sellerId
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  createdAt DateTime @default(now())
}

model Product {
  id        String           @id @default(uuid())
  tenantId  String
  tenant    Tenant           @relation(fields: [tenantId], references: [id])
  name      String
  brand     String?
  createdAt DateTime         @default(now())
  variants  ProductVariant[]

  @@unique([tenantId, name]) // upsert kolaylığı için
}

model ProductVariant {
  id        String  @id @default(uuid())
  productId String
  product   Product @relation(fields: [productId], references: [id])

  sku       String   @unique
  barcode   String?
  price     Decimal  @db.Decimal(12, 2) // <-- Düzeltildi: Decimal
  currency  String   @default("TRY")
  stock     Int      @default(0)
  attrs     Json?
  createdAt DateTime @default(now())
}

model SyncLog {
  id        String   @id @default(uuid())
  tenantId  String
  channelId String
  sku       String
  status    String // SUCCESS | ERROR
  message   String?
  createdAt DateTime @default(now())

  @@index([tenantId, channelId, sku, createdAt])
}
